{"version":3,"file":"chatView.js","sourceRoot":"","sources":["../../src/views/chatView.ts"],"names":[],"mappings":"AAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AACpD,QAAQ,CAAC,SAAS,GAAG;;;;;;CAMpB,CAAC;AAEF,MAAM,OAAO,QAAQ;IAEnB,YAAY,YAAyB,EAAE,GAAW;QAChD,YAAY,CAAC,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAgB,CAAC;QAClF,MAAM,UAAU,GAAG,YAAY,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAgB,CAAC;QACjF,MAAM,YAAY,GAAG,YAAY,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAqB,CAAC;QACzF,UAAU,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;IAC3F,CAAC;IAEO,MAAM,CAAC,OAAO,CAAC,GAAW,EAAE,SAAsB,EAAE,YAA8B;QACxF,KAAK,CAAC,uCAAuC,EAAE;YAC7C,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,IAAI,OAAO,CAAC;gBACnB,aAAa,EAAE,UAAU,GAAG,EAAE;gBAC9B,cAAc,EAAE,kBAAkB;aACnC,CAAC;YACF,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACnB,KAAK,EAAE,kBAAkB;gBACzB,MAAM,EAAE,YAAY,CAAC,KAAK;gBAC1B,WAAW,EAAE,GAAG;gBAChB,UAAU,EAAE,EAAE;aACf,CAAC;SACH,CAAC;aACC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACnC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACb,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7C,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,CAAC;CACF","sourcesContent":["const chatView = document.createElement('template');\nchatView.innerHTML = `\n  <div>\n    <input class=\"input\"></input>\n    <button class=\"call\" style=\"float: left\">Call</button>\n    <div class=\"result\"></div>\n  </div>\n`;\n\nexport class ChatView {\n  _resultRef: HTMLElement;\n  constructor(containerRef: HTMLElement, key: string) {\n    containerRef.replaceChildren(chatView.content.cloneNode(true));\n    this._resultRef = containerRef.getElementsByClassName('result')[0] as HTMLElement;\n    const callButton = containerRef.getElementsByClassName('call')[0] as HTMLElement;\n    const inputElement = containerRef.getElementsByClassName('input')[0] as HTMLInputElement;\n    callButton.onmousedown = ChatView.callApi.bind(this, key, this._resultRef, inputElement);\n  }\n\n  private static callApi(key: string, resultRef: HTMLElement, inputElement: HTMLInputElement) {\n    fetch('https://api.openai.com/v1/completions', {\n      method: 'POST',\n      headers: new Headers({\n        Authorization: `Bearer ${key}`,\n        'Content-Type': 'application/json',\n      }),\n      body: JSON.stringify({\n        model: 'text-davinci-003',\n        prompt: inputElement.value,\n        temperature: 0.9,\n        max_tokens: 20,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        resultRef.innerHTML = data.choices[0].text;\n      })\n      .catch((err) => console.log(err));\n  }\n}\n"]}